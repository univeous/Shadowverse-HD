# This is a basic workflow to help you get started with Actions

name: VersionCheck

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  version_check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: write secrets
        env:
          ANDROID_ID: ${{ secrets.ANDROID_ID }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          mkdir ~/googleplay
          echo "{\"AndroidID\": $ANDROID_ID}" > ~/googleplay/arm64-v8a.json
          echo "{\"Token\": \"$TOKEN\"}" > ~/googleplay/token.json

      # Runs a single command using the runners shell
      - name: check version
        run: |
          chmod +x ./googleplay
          store_version=$(./googleplay -a com.cygames.Shadowverse -p 2 | grep "VersionCode")
          version=$(cat version)
          if [[ $store_version > $version ]]; then
            echo "new_version=true" >> $GITHUB_ENV
            echo "version=$(echo ${store_version##* })" >> $GITHUB_ENV
          else
            echo "new_version=false" >> $GITHUB_ENV
          fi

      - name: "download new apk"
        if: env.new_version
        run: |
          ./googleplay -a com.cygames.Shadowverse  -p 2 -v ${{ env.version }} -s

      - name: "upload"
        uses: actions/upload-artifact@v3
        env:
          version: ${{ env.version }}
        with:
          name: Shadowverse-164
          path: com.cygames.Shadowverse-${{ env.version }}.apk
          
