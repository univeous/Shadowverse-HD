name: VersionCheck

on:
  workflow_dispatch:

jobs:
  version_check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: write secrets
        env:
          ANDROID_ID: ${{ secrets.ANDROID_ID }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          mkdir ~/googleplay
          echo "{\"AndroidID\": $ANDROID_ID}" > ~/googleplay/arm64-v8a.json
          echo "{\"Token\": \"$TOKEN\"}" > ~/googleplay/token.json

      - name: check version
        run: |
          chmod +x ./googleplay
          info=$(./googleplay -a com.cygames.Shadowverse -p 2)
          version_string=$(echo "$info" | grep "VersionString")
          store_version=$(echo "$info" | grep "VersionCode")
                
          version=$(cat version)
          if [[ $store_version > $version ]]; then
            echo "new_version=true" >> $GITHUB_ENV
            echo "store_version=$store_version" >> $GITHUB_ENV
            echo "version_string=$(echo ${version_string##* })" >> $GITHUB_ENV
            echo "version=$(echo ${store_version##* })" >> $GITHUB_ENV
          else
            echo "new_version=false" >> $GITHUB_ENV
          fi

      - name: "download new apk"
        if: env.new_version
        run: |
          ./googleplay -a com.cygames.Shadowverse  -p 2 -v ${{ env.version }} -s
      
      - name: Setup Java JDK
        uses: actions/setup-java@v3.3.0
        with:
          distribution: 'temurin'
          java-version: '17'
        
      - name: "decompile apk"
        if: env.new_version
        run: |
          mv *.apk original.apk
          java -jar ./apktool_2.6.1.jar d original.apk
      
      - name: "process apk"
        if: env.new_version
        run: |
          echo 1
          sed -i 's/android:maxAspectRatio="2.1"/android:maxAspectRatio="2.4"/' original/AndroidManifest.xml
          echo 2
          sed -i 's/"android.max_aspect" android:value="2.1"/"android.max_aspect" android:value="2.4"/' original/AndroidManifest.xml
          echo 3
          echo $(size original/lib/arm64-v8a/libil2cpp.so)
          (xxd original/lib/arm64-v8a/libil2cpp.so | sed 's/4218 201e 4008 201e 4108 211e/1f20 03d5 1f20 03d5 1f20 03d5/' | xxd -r > original/lib/arm64-v8a/libil2cpp.so)
          echo $(size original/lib/arm64-v8a/libil2cpp.so)
          
      - name: "recompile apk"
        if: env.new_version
        run: |
          java -jar ./apktool_2.6.1.jar b --use-aapt2 original
          mv original/dist/original.apk original/dist/Shadowverse-${{ env.version_string }}.apk

      - name: "zipalign and sign apk"
        if: env.new_version
        uses: kevin-david/zipalign-sign-android-release@v1.1
        with:
          releaseDirectory: original/dist
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_PASSWD }}
          zipAlign: true
        
      - name: release
        uses: ncipollo/release-action@v1.10.0
        with:
          name: ShadowverseHD-${{ env.version_string }}
          artifacts: original/dist/Shadowverse-${{ env.version_string }}-signed.apk
          tag: ${{ env.version_string }}
